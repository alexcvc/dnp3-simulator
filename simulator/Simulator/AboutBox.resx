<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>